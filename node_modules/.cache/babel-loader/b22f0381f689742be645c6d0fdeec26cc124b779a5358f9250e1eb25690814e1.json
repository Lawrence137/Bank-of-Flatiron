{"ast":null,"code":"var _jsxFileName = \"/home/lawrence/Development/Code/phase2/Bank-of-Flatiron/my-app/src/TransactionsList.js\";\nimport React from \"react\";\nimport Transaction from \"./Transaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionsList(_ref) {\n  let {\n    transactionsArr,\n    setTransaction,\n    search\n  } = _ref;\n  let allTransactions;\n  if (transactionsArr) {\n    const sievedTransactions = transactionsArr.filter(transaction => {\n      return transaction.description.toLowerCase().includes(search.toLowerCase());\n    });\n    allTransactions = sievedTransactions.map(transaction => {\n      return /*#__PURE__*/_jsxDEV(Transaction, {\n        date: transaction.date,\n        description: transaction.description,\n        category: transaction.category,\n        amount: transaction.amount\n      }, transaction.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 12\n      }, this);\n    });\n  }\n\n  // const singleTransaction = transactionsArr.map((transaction) => (\n  //   <Transaction \n  //     key={transaction.id}\n  //     date={transaction.date}\n  //     description={transaction.description}\n  //     category={transaction.category}\n  //     amount={transaction.amount}\n\n  //   />\n  // ))\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    border: \"1\",\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), allTransactions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = TransactionsList;\nexport default TransactionsList;\nvar _c;\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"names":["React","Transaction","TransactionsList","transactionsArr","setTransaction","search","allTransactions","sievedTransactions","filter","transaction","description","toLowerCase","includes","map","date","category","amount","id"],"sources":["/home/lawrence/Development/Code/phase2/Bank-of-Flatiron/my-app/src/TransactionsList.js"],"sourcesContent":["import React from \"react\";\nimport Transaction from \"./Transaction\";\n\nfunction TransactionsList({transactionsArr, setTransaction, search}) {\n\n  let allTransactions;\n\n  if (transactionsArr){\n    const sievedTransactions = transactionsArr.filter(transaction => {\n      return (transaction.description.toLowerCase().includes(search.toLowerCase()))\n  })\n  allTransactions = sievedTransactions.map((transaction) => {\n    return <Transaction \n      key={transaction.id}\n      date={transaction.date}\n      description={transaction.description}\n      category={transaction.category}\n      amount={transaction.amount}\n      \n    />\n  })\n  }\n\n  // const singleTransaction = transactionsArr.map((transaction) => (\n  //   <Transaction \n  //     key={transaction.id}\n  //     date={transaction.date}\n  //     description={transaction.description}\n  //     category={transaction.category}\n  //     amount={transaction.amount}\n      \n  //   />\n  // ))\n  \n  return (\n  \n    <table className=\"table\" border='1' >\n      \n        <tr>\n          <th>\n            <h3>Date</h3>\n          </th>\n          <th>\n            <h3>Description</h3>\n          </th>\n          <th>\n            <h3>Category</h3>\n          </th>\n          <th>\n            <h3>Amount</h3>\n          </th>\n        </tr>\n        {allTransactions}\n    </table>\n  );\n}\n\nexport default TransactionsList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC;AAExC,SAASC,gBAAgB,OAA4C;EAAA,IAA3C;IAACC,eAAe;IAAEC,cAAc;IAAEC;EAAM,CAAC;EAEjE,IAAIC,eAAe;EAEnB,IAAIH,eAAe,EAAC;IAClB,MAAMI,kBAAkB,GAAGJ,eAAe,CAACK,MAAM,CAACC,WAAW,IAAI;MAC/D,OAAQA,WAAW,CAACC,WAAW,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACP,MAAM,CAACM,WAAW,EAAE,CAAC;IAChF,CAAC,CAAC;IACFL,eAAe,GAAGC,kBAAkB,CAACM,GAAG,CAAEJ,WAAW,IAAK;MACxD,oBAAO,QAAC,WAAW;QAEjB,IAAI,EAAEA,WAAW,CAACK,IAAK;QACvB,WAAW,EAAEL,WAAW,CAACC,WAAY;QACrC,QAAQ,EAAED,WAAW,CAACM,QAAS;QAC/B,MAAM,EAAEN,WAAW,CAACO;MAAO,GAJtBP,WAAW,CAACQ,EAAE;QAAA;QAAA;QAAA;MAAA,QAMnB;IACJ,CAAC,CAAC;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,oBAEE;IAAO,SAAS,EAAC,OAAO;IAAC,MAAM,EAAC,GAAG;IAAA,wBAE/B;MAAA,wBACE;QAAA,uBACE;UAAA,UAAI;QAAI;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QACV,eACL;QAAA,uBACE;UAAA,UAAI;QAAW;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QACjB,eACL;QAAA,uBACE;UAAA,UAAI;QAAQ;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QACd,eACL;QAAA,uBACE;UAAA,UAAI;QAAM;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QACZ;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,EACJX,eAAe;EAAA;IAAA;IAAA;IAAA;EAAA,QACZ;AAEZ;AAAC,KApDQJ,gBAAgB;AAsDzB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}